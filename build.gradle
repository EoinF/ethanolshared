group 'com.github.eoinf.ethanolshared'
version '1.8'

import org.gradle.api.artifacts.maven.MavenDeployment

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8

sourceSets.main.java.srcDirs = [ "src/" ]
project.ext.assetsDir = 'assets'

ext {
    gdxVersion = '1.9.6'
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile "com.badlogicgames.gdx:gdx:$gdxVersion"
    compile "net.dermetfan.libgdx-utils:libgdx-utils:0.10.0"
    compile "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
}

task('buildAssets', type: JavaExec, dependsOn: 'classes') {
    main = 'com.github.eoinf.ethanolshared.GenerateAssets'
    classpath = sourceSets.main.runtimeClasspath
}

javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}

task ('javadocJar', type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from tasks.javadoc.destinationDir
}

task ('sourcesJar', type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}


task('dist', type: Jar, dependsOn: 'buildAssets') {
    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)
    from files(project.assetsDir)

    // Skip the creation of the default jar artifact
    jar.enabled = false
}


task('archiveAll') {
    dependsOn 'dist'
    dependsOn 'sourcesJar'
    dependsOn 'javadocJar'
    doLast {
        project.artifacts {
            archives dist
            archives sourcesJar
            archives javadocJar
        }
    }
}

task('publishLocal', type: Upload, dependsOn: 'archiveAll') {
    repositories {
        configuration = project.configurations.archives
        mavenLocal()
    }
}

signing {
    sign project.configurations.archives
}

task('publishStaging', type: Upload, dependsOn: 'archiveAll') {
    repositories {
        configuration = project.configurations.archives
        mavenDeployer {
            //def ascPom = addFilter('asc') {artifact, file -> artifact.ext == "asc" }
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                name 'EthanolShared'
                packaging 'jar'
                description 'Shared assets for the cup of methanol game and its editor'
                url 'https://github.com/EoinF/ethanolshared'

                scm {
                    url 'scm:git@github.com:EoinF/ethanolshared.git'
                    connection 'scm:git@github.com:EoinF/ethanolshared.git'
                    developerConnection 'scm:git@github.com:EoinF/ethanolshared.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'outterest'
                        name 'Eoin Flanagan'
                    }
                }
            }
        }
    }
}